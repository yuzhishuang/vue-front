server {
    listen 80;
    server_name  http://www.provenr.cn;
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
    location ~ ^/api { 
      proxy_pass http://www.provenr.cn:3000;
      # proxy_pass http://localhost:3000;
      proxy_redirect default; #重定向
      proxy_set_header Host $http_host;        #向后传递头信息
      proxy_set_header X-Real-IP $remote_addr; #把真实IP传给应用服务器
      proxy_connect_timeout 30; #默认超时时间
      proxy_send_timeout 60;    # 发送超时
      proxy_read_timeout 60;    # 读取超时
      proxy_buffering on;             # 在proxy_buffering 开启的情况下，Nginx将会尽可能的读取所有的upstream端传输的数据到buffer，直到proxy_buffers设置的所有buffer们 被写满或者数据被读取完(EOF)
      proxy_buffers 4 128k;           # proxy_buffers由缓冲区数量和缓冲区大小组成的。总的大小为number*size
      proxy_busy_buffers_size 256k;   # proxy_busy_buffers_size不是独立的空间，他是proxy_buffers和proxy_buffer_size的一部分。nginx会在没有完全读完后端响应的时候就开始向客户端传送数据，所以它会划出一部分缓冲区来专门向客户端传送数据(这部分的大小是由proxy_busy_buffers_size来控制的，建议为proxy_buffers中单个缓冲区大小的2倍)，然后它继续从后端取数据，缓冲区满了之后就写到磁盘的临时文件中。
      proxy_buffer_size 32k;          # 用来存储upstream端response的header
      proxy_max_temp_file_size 256k; # response的内容很大的 话，Nginx会接收并把他们写入到temp_file里去，大小由proxy_max_temp_file_size控制。如果busy的buffer 传输完了会从temp_file里面接着读数据，直到传输完毕。
    }
}